// Generated by CoffeeScript 1.7.1
(function() {
  var add_event_listeners, ball, canvas, check_ball_movement, check_collisions, check_inputs, context, cpu_paddle, draw, keys, main_loop, move_cpu_paddle, player_paddle, update;

  canvas = document.getElementById("game");

  context = canvas.getContext("2d");

  player_paddle = new Paddle("Player", "#2B7DB3", 10, canvas.height / 2 - (Paddle.HEIGHT / 2));

  cpu_paddle = new Paddle("CPU", "#ACB3A7", canvas.width - 10 - Paddle.WIDTH, canvas.height / 2 - (Paddle.HEIGHT / 2));

  ball = new Ball(canvas.width / 2, canvas.height / 2);

  keys = [];

  update = function() {
    check_inputs();
    check_ball_movement();
    ball.x += ball.vel_x;
    ball.y += ball.vel_y;
    move_cpu_paddle();
    return check_collisions();
  };

  draw = function() {
    context.clearRect(0, 0, canvas.width, canvas.height);
    player_paddle.draw(context);
    cpu_paddle.draw(context);
    return ball.draw(context);
  };

  main_loop = function() {
    update();
    draw();
    return window.requestAnimationFrame(main_loop);
  };

  add_event_listeners = function() {
    document.body.addEventListener('keydown', function(e) {
      return keys[e.keyCode] = true;
    });
    return document.body.addEventListener('keyup', function(e) {
      return keys[e.keyCode] = false;
    });
  };

  check_inputs = function() {
    if (keys[38]) {
      if (player_paddle.y >= 0) {
        return player_paddle.y -= 3;
      }
    } else if (keys[40]) {
      if (player_paddle.y <= (canvas.height - player_paddle.height)) {
        return player_paddle.y += 3;
      }
    }
  };

  check_ball_movement = function() {
    if (ball.x < 0 || ball.x > (canvas.width - ball.width)) {
      ball.vel_x *= -1;
    }
    if (ball.y < 0 || ball.y > (canvas.height - ball.height)) {
      return ball.vel_y *= -1;
    }
  };

  move_cpu_paddle = function() {
    if ((cpu_paddle.y = ball.y) > (canvas.height - cpu_paddle.height)) {
      return cpu_paddle.y = canvas.height - cpu_paddle.height;
    }
  };

  check_collisions = function() {
    if (Helpers.collision_between(ball, player_paddle) || Helpers.collision_between(ball, cpu_paddle)) {
      ball.vel_x *= -1;
    }
    if (ball.x <= 0) {
      console.log("Player loses");
      return ball = new Ball(canvas.width / 2, canvas.height / 2);
    } else if (ball.x >= canvas.width) {
      return console.log("Player WINS!");
    }
  };

  add_event_listeners();

  window.requestAnimationFrame(main_loop);

}).call(this);
